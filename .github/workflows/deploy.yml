name: Deploy FastAPI Service to EC2

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_REGION: us-east-1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: |
        uv sync --all-extras
    
    - name: Run tests
      run: |
        uv run pytest tests/ -v
    
    - name: Lint with flake8
      run: |
        uv run flake8 main.py --max-line-length=88 --extend-ignore=E203
    
    - name: Format check with black
      run: |
        uv run black --check main.py

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to application directory
          cd /home/${{ secrets.EC2_USERNAME }}/fastapi-service || {
            echo "Creating application directory..."
            mkdir -p /home/${{ secrets.EC2_USERNAME }}/fastapi-service
            cd /home/${{ secrets.EC2_USERNAME }}/fastapi-service
          }
          
          # Clone or pull latest code
          if [ -d ".git" ]; then
            echo "Updating existing repository..."
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/${{ github.repository }} .
          fi
          
          # Stop existing service if running
          sudo systemctl stop fastapi-service || echo "Service not running"
          
          # Install/update dependencies
          if ! command -v uv &> /dev/null; then
            echo "Installing uv..."
            curl -LsSf https://astral.sh/uv/install.sh | sh
            source ~/.bashrc
          fi
          
          # Create virtual environment and install dependencies
          uv sync
          
          # Copy systemd service file
          sudo cp deploy/fastapi-service.service /etc/systemd/system/
          sudo systemctl daemon-reload
          
          # Start and enable service
          sudo systemctl enable fastapi-service
          sudo systemctl start fastapi-service
          
          # Check service status
          sudo systemctl status fastapi-service
